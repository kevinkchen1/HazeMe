{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gauth\\\\Local\\\\lahacks\\\\src\\\\GlobalStateContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalStateContext = /*#__PURE__*/createContext(null);\nexport const GlobalStateProvider = ({\n  children\n}) => {\n  _s();\n  // Initialize state from localStorage if it exists, otherwise use an empty array\n  const [globalArray, setGlobalArray] = useState(() => {\n    const saved = localStorage.getItem('globalArray');\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  // Effect to store state changes to localStorage\n  useEffect(() => {\n    localStorage.setItem('globalArray', JSON.stringify(globalArray));\n  }, [globalArray]);\n  return /*#__PURE__*/_jsxDEV(GlobalStateContext.Provider, {\n    value: {\n      globalArray,\n      setGlobalArray\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalStateProvider, \"Y1mBnDdrXDR269sZ8h7pouLNYFc=\");\n_c = GlobalStateProvider;\nexport const useGlobalState = () => {\n  _s2();\n  return useContext(GlobalStateContext);\n};\n_s2(useGlobalState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalStateProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","GlobalStateContext","GlobalStateProvider","children","_s","globalArray","setGlobalArray","saved","localStorage","getItem","JSON","parse","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalState","_s2","$RefreshReg$"],"sources":["C:/Users/gauth/Local/lahacks/src/GlobalStateContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst GlobalStateContext = createContext(null);\r\n\r\nexport const GlobalStateProvider = ({ children }) => {\r\n  // Initialize state from localStorage if it exists, otherwise use an empty array\r\n  const [globalArray, setGlobalArray] = useState(() => {\r\n    const saved = localStorage.getItem('globalArray');\r\n    return saved ? JSON.parse(saved) : [];\r\n  });\r\n\r\n  // Effect to store state changes to localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('globalArray', JSON.stringify(globalArray));\r\n  }, [globalArray]);\r\n\r\n  return (\r\n    <GlobalStateContext.Provider value={{ globalArray, setGlobalArray }}>\r\n      {children}\r\n    </GlobalStateContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalState = () => useContext(GlobalStateContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,kBAAkB,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAE9C,OAAO,MAAMO,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACnD,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACjD,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,EAAE;EACvC,CAAC,CAAC;;EAEF;EACAT,SAAS,CAAC,MAAM;IACdU,YAAY,CAACI,OAAO,CAAC,aAAa,EAAEF,IAAI,CAACG,SAAS,CAACR,WAAW,CAAC,CAAC;EAClE,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,oBACEL,OAAA,CAACC,kBAAkB,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,WAAW;MAAEC;IAAe,CAAE;IAAAH,QAAA,EACjEA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAElC,CAAC;AAACf,EAAA,CAjBWF,mBAAmB;AAAAkB,EAAA,GAAnBlB,mBAAmB;AAmBhC,OAAO,MAAMmB,cAAc,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMzB,UAAU,CAACI,kBAAkB,CAAC;AAAA;AAACqB,GAAA,CAAtDD,cAAc;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}